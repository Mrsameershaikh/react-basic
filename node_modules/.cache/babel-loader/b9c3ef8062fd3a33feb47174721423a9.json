{"ast":null,"code":"var _jsxFileName = \"/home/xelpmoc/Documents/React projects/react-basic/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const [text, settext] = useState(\"\");\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    settext(newText);\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n\n  const handleLowClick = () => {\n    let newText = text.toLowerCase();\n    settext(newText);\n    props.showAlert(\"Converted to lowercase\", \"success\");\n  };\n\n  const clearTextArea = () => {\n    if (window.confirm(\"Do you really want to clear the text?\")) {\n      settext(\"\");\n      props.showAlert(\"text cleared\", \"success\");\n    } else {\n      let newText = text;\n      settext(newText);\n      props.showAlert(\"Converted to uppercase\", \"success\");\n    }\n  };\n\n  const textCopy = () => {\n    let text = document.getElementById(\"mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n  };\n\n  const removeSpace = () => {\n    let newText = text.split(/[ ]+/);\n    settext(newText.join(\" \"));\n  };\n\n  const upperFirstLetter = () => {\n    let splitStr = text.toLowerCase().split(' ');\n\n    for (let i = 0; i < splitStr.length; i++) {\n      // You do not need to check if i is larger than splitStr length, as your for does that for you\n      // Assign it back to the array\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n\n    settext(splitStr.join(' '));\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"On change\");\n    settext(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'gray' : 'white'\n          },\n          onChange: handleOnChange,\n          id: \"mybox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLowClick,\n        children: \"LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: textCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: removeSpace,\n        children: \"Remove space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: upperFirstLetter,\n        children: \"Ucase first letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 btn-danger\",\n        onClick: clearTextArea,\n        children: \"Clear Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'dark' ? 'gray' : 'black'\n        },\n        children: [text.split(' ').length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'dark' ? 'gray' : 'black'\n        },\n        children: [0.008 * text.split(\" \").length, \" minutes need to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'dark' ? 'gray' : 'black'\n        },\n        children: text.length > 0 ? text : 'Enter something in the textbox above to preview it here'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"CpJ+aDFQa4ocOyN/cDS5MS0XypA=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","text","settext","handleUpClick","newText","toUpperCase","showAlert","handleLowClick","toLowerCase","clearTextArea","window","confirm","textCopy","document","getElementById","select","navigator","clipboard","writeText","value","removeSpace","split","join","upperFirstLetter","splitStr","i","length","charAt","substring","handleOnChange","event","target","heading","backgroundColor","mode","color"],"sources":["/home/xelpmoc/Documents/React projects/react-basic/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const [text, settext] = useState(\"\");\n    const handleUpClick = () => {\n        let newText = text.toUpperCase();\n        settext(newText);\n        props.showAlert(\"Converted to uppercase\",\"success\");\n    }\n    const handleLowClick = () => {\n        let newText = text.toLowerCase();\n        settext(newText);\n        props.showAlert(\"Converted to lowercase\",\"success\");\n    }\n    const clearTextArea = () => {\n        if(window.confirm(\"Do you really want to clear the text?\")){\n            settext(\"\")\n            props.showAlert(\"text cleared\",\"success\");\n        }else{\n            let newText = text;\n            settext(newText);\n            props.showAlert(\"Converted to uppercase\",\"success\");\n        }\n\n    }\n    const textCopy = () => {\n        let text=document.getElementById(\"mybox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n    }\n    const removeSpace = () => {\n        let newText=text.split(/[ ]+/);\n        settext(newText.join(\" \"));\n        \n    }\n    const upperFirstLetter=()=>{\n        let splitStr = text.toLowerCase().split(' ');\n        for (let i = 0; i < splitStr.length; i++) {\n            // You do not need to check if i is larger than splitStr length, as your for does that for you\n            // Assign it back to the array\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n        }\n        settext(splitStr.join(' '));\n    }\n    const handleOnChange = (event) => {\n        // console.log(\"On change\");\n        settext(event.target.value)\n    }\n    return (\n        <>\n            <div className=\"container\">\n                <h4>{props.heading}</h4>\n                <div className=\"mb-3\" >\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor:props.mode==='dark'?'gray':'white' }} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>Uppercase</button>\n                <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>LowerCase</button>\n                <button className=\"btn btn-primary mx-2\" onClick={textCopy}>Copy Text</button>\n                <button className=\"btn btn-primary mx-2\" onClick={removeSpace}>Remove space</button>\n                <button className=\"btn btn-primary mx-2\" onClick={upperFirstLetter}>Ucase first letter</button>\n                <button className=\"btn btn-primary mx-2 btn-danger\" onClick={clearTextArea}>Clear Text </button>\n            </div>\n            <div className=\"container my-3\">\n                <h2>Your text summary</h2>\n                <p style={{ color:props.mode==='dark'?'gray':'black' }}>{text.split(' ').length} words and {text.length} characters</p>\n                <p style={{ color:props.mode==='dark'?'gray':'black' }}>{0.008 * text.split(\" \").length} minutes need to read</p>\n                <h3>Preview</h3>\n                <p style={{ color:props.mode==='dark'?'gray':'black' }}>{text.length>0?text:'Enter something in the textbox above to preview it here'}</p>\n            </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}