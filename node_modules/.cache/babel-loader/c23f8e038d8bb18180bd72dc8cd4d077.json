{"ast":null,"code":"var _jsxFileName = \"/home/xelpmoc/Documents/React projects/react-basic/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //whether dark mode is enable or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#001a06';\n      document.body.style.color = '#b3b300';\n      setAlert(\"Dark mode has been ena\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","About","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","color"],"sources":["/home/xelpmoc/Documents/React projects/react-basic/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport About from './components/About';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const[mode,setMode]=useState('light'); //whether dark mode is enable or not\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message, type)=>{\n        setAlert({\n          msg:message,\n          type:type\n        })\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#001a06';\n      document.body.style.color='#b3b300';\n      setAlert(\"Dark mode has been ena\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <About/>\n    <TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\n    </div>\n    </>\n  );\n}\nexport default App;\n    \n    \n    \n    \n\n\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,OAAD,CAA5B,CADa,CAC0B;;EACvC,MAAK,CAACM,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,IAAD,CAA9B;;EAEA,MAAMQ,SAAS,GAAC,CAACC,OAAD,EAAUC,IAAV,KAAiB;IAC3BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OADG;MAEPC,IAAI,EAACA;IAFE,CAAD,CAAR;EAIL,CALD;;EAMA,MAAME,UAAU,GAAC,MAAI;IACnB,IAAGR,IAAI,KAAG,OAAV,EAAkB;MAChBC,OAAO,CAAC,MAAD,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;MACAH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,KAApB,GAA0B,SAA1B;MACAV,QAAQ,CAAC,wBAAD,CAAR;IACD,CALD,MAMI;MACFF,OAAO,CAAC,OAAD,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,KAApB,GAA0B,OAA1B;IACD;EACF,CAZD;;EAaA,oBACE;IAAA,wBACA,QAAC,MAAD;MAAQ,KAAK,EAAC,WAAd;MAA0B,SAAS,EAAC,iBAApC;MAAsD,IAAI,EAAEb,IAA5D;MAAkE,UAAU,EAAEQ;IAA9E;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,KAAD;MAAO,KAAK,EAAEN;IAAd;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACA,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,QAAD;QAAU,OAAO,EAAC,iCAAlB;QAAoD,IAAI,EAAEF;MAA1D;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAUD;;GAjCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}